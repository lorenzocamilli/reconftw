#!/bin/bash

# Load environment variables
if [[ -f "reconftw.cfg" ]]; then
	source reconftw.cfg
else
	echo "Error: reconftw.cfg not found!"
	exit 1
fi

# Help menu function
function display_help() {
	echo "$(basename "$0") [OPTIONS]"
	echo
	echo "Perform Web Cache Poisoning checks on provided inputs."
	echo "Options:"
	echo "  -h, --help    Display this help and exit"
	echo
}

# Validate requirements function
function validate_requirements() {
	if ! [[ -x "$(command -v anew)" ]]; then
		echo "Error: anew not found." >&2
		exit 1
	fi
	if ! [[ -d "${tools}/Web-Cache-Vulnerability-Scanner" ]]; then
		echo "Error: Web-Cache-Vulnerability-Scanner directory not found." >&2
		exit 1
	fi
}

# Web Cache Poisoning test function
function webcache_test() {
	echo "[*] Starting Web Cache Poisoning checks"
	[[ ! -s ".tmp/webs_all.txt" ]] && cat webs/webs.txt webs/webs_uncommon_ports.txt 2>/dev/null | anew -q .tmp/webs_all.txt
	if [[ $DEEP == true ]] || [[ $(cat .tmp/webs_all.txt | wc -l) -le $DEEP_LIMIT ]]; then
		cd "${tools}/Web-Cache-Vulnerability-Scanner" || {
			echo "Failed to cd directory in webcache @ line $LINENO"
			exit 1
		}
		Web-Cache-Vulnerability-Scanner -u file:"${dir}"/.tmp/webs_all.txt -v 0 2>/dev/null | anew -q "${dir}"/.tmp/webcache.txt
		cd "${dir}" || {
			echo "Failed to cd to $dir in webcache @ line $LINENO"
			exit 1
		}
		[[ -s ".tmp/webcache.txt" ]] && cat .tmp/webcache.txt | anew -q vulns/webcache.txt
		echo "[+] Results are saved in vulns/webcache.txt"
	else
		echo "[!] Skipping Web Cache Poisoning: Too many webs to test, try with --deep flag"
	fi
}

# Main script execution
while (("$#")); do
	case "$1" in
	-h | --help)
		display_help
		exit 0
		;;
	*)
		echo "Unknown parameter passed: $1"
		display_help
		exit 1
		;;
	esac
done

validate_requirements
webcache_test
