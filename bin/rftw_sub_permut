#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Helper function to display usage/help menu
usage() {
	echo "$(basename "$0") [OPTIONS]"
	echo
	echo "Options:"
	echo "  -h, --help          Display this help and exit."
	echo
	echo "Make sure to set up 'reconftw.cfg' with required environment variables."
	exit 1
}

# Input validation
if [[ $# -eq 1 && ($1 == "-h" || $1 == "--help") ]]; then
	usage
fi

# Check for mandatory variables
if [[ -z ${SUBPERMUTE} || -z ${called_fn_dir} || -z ${DIFF} ]]; then
	echo "Mandatory variables not set in the configuration file. Exiting."
	exit 1
fi

sub_permut() {
	if [[ ${DEEP} == true ]] || [[ "$(cat subdomains/subdomains.txt | wc -l)" -le ${DEEP_LIMIT} ]]; then
		if [[ ${PERMUTATIONS_OPTION} == "gotator" ]]; then
			[[ -s "subdomains/subdomains.txt" ]] && gotator -sub subdomains/subdomains.txt -perm"${tools}"/permutations_list.txt "${GOTATOR_FLAGS}" -silent | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator1.txt
		else
			[[ -s "subdomains/subdomains.txt" ]] && ripgen -d subdomains/subdomains.txt -w"${tools}"/permutations_list.txt | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator1.txt
		fi
	elif [[ "$(cat .tmp/subs_no_resolved.txt | wc -l)" -le ${DEEP_LIMIT2} ]]; then
		if [[ ${PERMUTATIONS_OPTION} == "gotator" ]]; then
			[[ -s ".tmp/subs_no_resolved.txt" ]] && gotator -sub .tmp/subs_no_resolved.txt -perm"${tools}"/permutations_list.txt $GOTATOR_FLAGS -silent | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator1.txt
		else
			[[ -s ".tmp/subs_no_resolved.txt" ]] && ripgen -d .tmp/subs_no_resolved.txt -w"${tools}"/permutations_list.txt | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator1.txt
		fi
	else
		end_subfunc "Skipping Permutations: Too Many Subdomains" ${FUNCNAME[0]}
		return 1
	fi
	if [[ ${AXIOM} != true ]]; then
		resolvers_update_quick_local
		[[ -s ".tmp/gotator1.txt" ]] && puredns resolve .tmp/gotator1.txt -w .tmp/permute1.txt -r "${resolvers}" --resolvers-trusted "${resolvers_trusted}" -l "${PUREDNS_PUBLIC_LIMIT}" --rate-limit-trusted "${PUREDNS_TRUSTED_LIMIT}" --wildcard-tests "${PUREDNS_WILDCARDTEST_LIMIT}" --wildcard-batch "${PUREDNS_WILDCARDBATCH_LIMIT}"
	else
		resolvers_update_quick_axiom
		[[ -s ".tmp/gotator1.txt" ]] && axiom-scan .tmp/gotator1.txt -m puredns-resolve -r /home/op/lists/resolvers.txt --resolvers-trusted /home/op/lists/resolvers_trusted.txt --rate-limit-trusted "${PUREDNS_TRUSTED_LIMIT}" --wildcard-tests "${PUREDNS_WILDCARDTEST_LIMIT}" -o .tmp/permute1.txt "${AXIOM_EXTRA_ARGS}"
	fi

	if [[ $PERMUTATIONS_OPTION == "gotator" ]]; then
		[[ -s ".tmp/permute1.txt" ]] && gotator -sub .tmp/permute1.txt -perm"${tools}"/permutations_list.txt $GOTATOR_FLAGS -silent | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator2.txt
	else
		[[ -s ".tmp/permute1.txt" ]] && ripgen -d .tmp/permute1.txt -w"${tools}"/permutations_list.txt | head -c "${PERMUTATIONS_LIMIT}" >.tmp/gotator2.txt
	fi

	if [[ ${AXIOM} != true ]]; then
		[[ -s ".tmp/gotator2.txt" ]] && puredns resolve .tmp/gotator2.txt -w .tmp/permute2.txt -r "${resolvers}" --resolvers-trusted "${resolvers_trusted}" -l "${PUREDNS_PUBLIC_LIMIT}" --rate-limit-trusted "${PUREDNS_TRUSTED_LIMIT}" --wildcard-tests "${PUREDNS_WILDCARDTEST_LIMIT}" --wildcard-batch "${PUREDNS_WILDCARDBATCH_LIMIT}"
	else
		[[ -s ".tmp/gotator2.txt" ]] && axiom-scan .tmp/gotator2.txt -m puredns-resolve -r /home/op/lists/resolvers.txt --resolvers-trusted /home/op/lists/resolvers_trusted.txt --rate-limit-trusted "${PUREDNS_TRUSTED_LIMIT}" --wildcard-tests "${PUREDNS_WILDCARDTEST_LIMIT}" -o .tmp/permute2.txt "${AXIOM_EXTRA_ARGS}"
	fi
	cat .tmp/permute1.txt .tmp/permute2.txt | anew -q .tmp/permute_subs.txt

}

# Execute the main function
sub_permut
