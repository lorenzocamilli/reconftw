#!/bin/bash

# Load environment variables from reconftw.cfg
# Load environment variables
if [ -f "reconftw.cfg" ]; then
    source reconftw.cfg
else
    echo "Error: reconftw.cfg not found!"
    exit 1
fi

help_menu() {
    echo "$(basename "$0") [DOMAIN] [OPTIONS]"
    echo "Virtual Hosts discovery tool for the specified domain."
    echo
    echo "Options:"
    echo "  -h, --help   Display this help menu and exit"
    echo "  -f, --force  Force the execution even if it was already processed"
}

validate_inputs() {
    if [[ -z "$domain" ]]; then
        echo -e "${yellow} No domain provided! ${reset}"
        exit 1
    fi

    if [ "$VIRTUALHOSTS" != true ] && [ "$FORCE_EXECUTION" != true ]; then
        echo -e "${yellow} virtualhosts skipped in this mode or defined in reconftw.cfg ${reset}"
        exit 0
    fi
}

run_virtualhosts() {
    start_func "virtualhosts" "Virtual Hosts discovery"
    
    [ ! -s ".tmp/webs_all.txt" ] && cat webs/webs.txt webs/webs_uncommon_ports.txt 2>/dev/null | anew -q .tmp/webs_all.txt

    if [ -s ".tmp/webs_all.txt" ]; then
        mkdir -p $dir/virtualhosts $dir/.tmp/virtualhosts
        interlace -tL .tmp/webs_all.txt -threads ${INTERLACE_THREADS} -c "ffuf -ac -t ${FFUF_THREADS} -rate ${FFUF_RATELIMIT} -H \"${HEADER}\" -H \"Host: FUZZ._cleantarget_\" -w ${fuzz_wordlist} -maxtime ${FFUF_MAXTIME} -u  _target_ -of json -o _output_/_cleantarget_.json" -o $dir/.tmp/virtualhosts 2>>"$LOGFILE" >/dev/null

        for sub in $(cat .tmp/webs_all.txt); do
            sub_out=$(echo $sub | sed -e 's|^[^/]*//||' -e 's|/.*$||')
            [ -s "$dir/.tmp/virtualhosts/${sub_out}.json" ] && cat $dir/.tmp/virtualhosts/${sub_out}.json | jq -r 'try .results[] | "\(.status) \(.length) \(.url)"' | sort | anew -q $dir/virtualhosts/${sub_out}.txt
        done
        
        find $dir/virtualhosts/ -type f -iname "*.txt" -exec cat {} + 2>>"$LOGFILE" | anew -q $dir/virtualhosts/virtualhosts_full.txt
        end_func "Results are saved in $domain/virtualhosts/*subdomain*.txt" "virtualhosts"
    else
        end_func "No $domain/web/webs.txts file found, virtualhosts skipped " "virtualhosts"
    fi
}

# Main
FORCE_EXECUTION=false
domain="$1"

shift
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -h|--help) help_menu; exit 0 ;;
        -f|--force) FORCE_EXECUTION=true; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

validate_inputs
run_virtualhosts
