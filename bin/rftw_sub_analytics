#!/bin/bash

# Load environment variables
if [ -f "reconftw.cfg" ]; then
    source reconftw.cfg
else
    echo "Error: reconftw.cfg not found!"
    exit 1
fi

function usage() {
    echo "$(basename "$0") [-h] [-d DOMAIN] [-i INPUT_FILE] [-o OUTPUT_FILE]"
    echo "  -h                Display this help message."
    echo "  -d DOMAIN         Specify the target domain."
    echo "  -i INPUT_FILE     Specify the input file."
    echo "  -o OUTPUT_FILE    Specify the output file."
    exit 1
}

# Validate input arguments
input_file=""
output_file=""
while getopts ":hd:i:o:" opt; do
    case ${opt} in
        h)
            usage
            ;;
        d)
            domain="$OPTARG"
            ;;
        i)
            input_file="$OPTARG"
            if [[ ! -f "$input_file" ]]; then
                echo "Error: Input file does not exist."
                exit 1
            fi
            ;;
        o)
            output_file="$OPTARG"
            touch "$output_file" 2>/dev/null || { echo "Error: Cannot write to the specified output file."; exit 1; }
            ;;
        *)
            echo "Invalid option: -$OPTARG" 1>&2
            usage
            ;;
    esac
done
shift $((OPTIND -1))

if [[ -z "$domain" ]]; then
    echo "Error: No domain specified."
    usage
fi

function sub_analytics() {
    if { [ ! -f "$called_fn_dir/.sub_analytics" ] || [ "$DIFF" = true ]; } && [ "$SUBANALYTICS" = true ]; then
        echo "Running : Analytics Subdomain Enumeration"
        
        if [ -s ".tmp/probed_tmp_scrap.txt" ]; then
            mkdir -p .tmp/output_analytics/
            analyticsrelationships -ch < .tmp/probed_tmp_scrap.txt >> .tmp/analytics_subs_tmp.txt 2>>"$LOGFILE"
            
            [ -s ".tmp/analytics_subs_tmp.txt" ] && cat .tmp/analytics_subs_tmp.txt | grep "\.$domain$\|^$domain$" | sed "s/|__ //" | anew -q .tmp/analytics_subs_clean.txt

            if [ ! "$AXIOM" = true ]; then
                resolvers_update_quick_local
                [ -s ".tmp/analytics_subs_clean.txt" ] && puredns resolve .tmp/analytics_subs_clean.txt -w .tmp/analytics_subs_resolved.txt -r $resolvers --resolvers-trusted $resolvers_trusted -l $PUREDNS_PUBLIC_LIMIT --rate-limit-trusted $PUREDNS_TRUSTED_LIMIT --wildcard-tests $PUREDNS_WILDCARDTEST_LIMIT --wildcard-batch $PUREDNS_WILDCARDBATCH_LIMIT 2>>"$LOGFILE" >/dev/null
            else
                resolvers_update_quick_axiom
                [ -s ".tmp/analytics_subs_clean.txt" ] && axiom-scan .tmp/analytics_subs_clean.txt -m puredns-resolve -r /home/op/lists/resolvers.txt --resolvers-trusted /home/op/lists/resolvers_trusted.txt --wildcard-tests $PUREDNS_WILDCARDTEST_LIMIT --wildcard-batch $PUREDNS_WILDCARDBATCH_LIMIT -o .tmp/analytics_subs_resolved.txt $AXIOM_EXTRA_ARGS 2>>"$LOGFILE" >/dev/null
            fi
        fi

        [[ "$INSCOPE" = true ]] && check_inscope .tmp/analytics_subs_resolved.txt 2>>"$LOGFILE" >/dev/null
        NUMOFLINES=$(cat .tmp/analytics_subs_resolved.txt 2>>"$LOGFILE" | anew subdomains/subdomains.txt | sed '/^$/d' | wc -l)
        
        echo "${NUMOFLINES} new subs (analytics relationship)"
    else
        if [ "$SUBANALYTICS" = false ]; then
            echo -e "\n${yellow} sub_analytics skipped in this mode or defined in reconftw.cfg ${reset}\n"
        else
            echo -e "${yellow} sub_analytics is already processed, to force executing sub_analytics delete\n    $called_fn_dir/.sub_analytics ${reset}\n\n"
        fi
    fi
}

# At the end where you save the output, you can redirect the output to the specified file
if [[ ! -z "$output_file" ]]; then
    # For example, if you were saving data like this:
    # echo "${NUMOFLINES} new subs (analytics relationship)"
    # Change it to:
    echo "${NUMOFLINES} new subs (analytics relationship)" > "$output_file"
fi

# Execute the function
sub_analytics