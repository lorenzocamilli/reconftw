#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help function
help_menu() {
	echo "$(basename "$0") [OPTIONS]"
	echo ""
	echo "CMS Scanner"
	echo ""
	echo "Options:"
	echo "  -h, --help            Show this help menu"
	echo "  -f, --force           Force the execution even if already processed"
}

# Start function
start_func() {
	echo "Starting $1: $2..."
}

# End function
end_func() {
	echo "$1"
	echo "End of $2..."
}

# Default values
FORCE=false

# Parse arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-h | --help)
		help_menu
		exit 0
		;;
	-f | --force) FORCE=true ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

mkdir -p "${dir}"/cms && rm -rf "${dir}"/cms/*
anew -q .tmp/webs_all.txt < <(cat webs/webs.txt webs/webs_uncommon_ports.txt 2>/dev/null)
if [[ -s ".tmp/webs_all.txt" ]]; then
	tr '\n' ',' <.tmp/webs_all.txt >.tmp/cms.txt
	timeout -k 1m ${CMSSCAN_TIMEOUT}s python3"${tools}"/CMSeeK/cmseek.py -l .tmp/cms.txt --batch -r 2>>"${LOGFILE}" >/dev/null
	exit_status=$?
	if [[ $exit_status -eq 125 ]]; then
		echo "TIMEOUT cmseek.py - investigate manually for $dir" >>"${LOGFILE}"
		end_func "TIMEOUT cmseek.py - investigate manually for $dir" "cms_scanner"
		exit 1
	elif [[ $exit_status -ne 0 ]]; then
		echo "ERROR cmseek.py - investigate manually for $dir" >>"${LOGFILE}"
		end_func "ERROR cmseek.py - investigate manually for $dir" "cms_scanner"
		exit 1
	fi
	while read -r sub; do
		sub_out=$(echo "$sub" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
		cms_id=$(jq -r 'try .cms_id' "${tools}/CMSeeK/Result/${sub_out}/cms.json" 2>/dev/null)
		if [[ -z $cms_id ]]; then
			rm -rf "${tools}/CMSeeK/Result/${sub_out}"
		else
			mv -f "${tools}/CMSeeK/Result/${sub_out}" "${dir}"/cms/ 2>>"${LOGFILE}"
		fi
	done <.tmp/webs_all.txt
fi