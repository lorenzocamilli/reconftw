#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

help_menu() {
	echo "$(basename "$0") [DOMAIN] [OPTIONS]"
	echo "Zone transfer checker."
	echo
	echo "Options:"
	echo "  -h, --help   Display this help menu and exit"
	echo "  -f, --force  Force the execution even if it was already processed"
}

validate_inputs() {
	if [[ -z ${DOMAIN} ]]; then
		echo -e "${yellow} No domain provided! ${reset}"
		exit 1
	fi

	if [[ ${DOMAIN} =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9] ]]; then
		echo -e "${yellow} Invalid domain format: IP address provided instead of a domain name ${reset}"
		exit 1
	fi

	if [[ ${ZONETRANSFER} != true ]] && [[ ${FORCE_EXECUTION} != true ]]; then
		echo -e "${yellow} zonetransfer skipped in this mode or defined in reconftw.cfg ${reset}"
		exit 0
	fi
}

run_zonetransfer() {
	start_func "zonetransfer" "Zone transfer check"
	for ns in $(dig +short ns "${DOMAIN}"); do
		dig axfr "${DOMAIN}" @"$ns" >>subdomains/zonetransfer.txt
	done
	if [[ -s "subdomains/zonetransfer.txt" ]] && ! grep -q "Transfer failed" subdomains/zonetransfer.txt; then
		notification "Zone transfer found on ${DOMAIN}!" info
	fi
	end_func "Results are saved in${DOMAIN}/subdomains/zonetransfer.txt" "zonetransfer"
}

# Main
FORCE_EXECUTION=false
DOMAIN="$1"

shift
while [[ $# -gt 0 ]]; do
	case $1 in
	-h | --help)
		help_menu
		exit 0
		;;
	-f | --force)
		FORCE_EXECUTION=true
		shift
		;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

validate_inputs
run_zonetransfer
