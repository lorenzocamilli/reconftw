#!/bin/bash

# Load environment variables from reconftw.cfg
# Load environment variables
if [ -f "reconftw.cfg" ]; then
    source reconftw.cfg
else
    echo "Error: reconftw.cfg not found!"
    exit 1
fi

# Colors
yellow="\033[1;33m"
reset="\033[0m"

# Help menu function
function display_help() {
    echo "$(basename "$0") [OPTIONS]"
    echo
    echo "Perform LFI checks on provided inputs."
    echo "Options:"
    echo "  -d, --deep    Perform deep scanning"
    echo "  -h, --help    Display this help and exit"
    echo
}

# Validate requirements function
function validate_requirements() {
    if ! [ -x "$(command -v ffuf)" ] || ! [ -x "$(command -v interlace)" ]; then
        echo "Error: ffuf and/or interlace are not installed." >&2
        exit 1
    fi
}

# LFI checks function
function lfi_checks() {
    local deep_flag=$1

    if { [ ! -f "$called_fn_dir/.lfi_checks" ] || [ "$DIFF" = true ]; } && [ "$LFI" = true ] && [ -s "gf/lfi.txt" ]; then
        echo "[*] Starting LFI checks"

        cat gf/lfi.txt | qsreplace FUZZ | sed '/FUZZ/!d' | anew -q .tmp/tmp_lfi.txt
        
        if [ "$deep_flag" = true ] || [[ $(cat .tmp/tmp_lfi.txt | wc -l) -le $DEEP_LIMIT ]]; then
            interlace -tL .tmp/tmp_lfi.txt -threads ${INTERLACE_THREADS} -c "ffuf -v -r -t ${FFUF_THREADS} -rate ${FFUF_RATELIMIT} -H \"${HEADER}\" -w ${lfi_wordlist} -u \"_target_\" -mr \"root:\" " 2>/dev/null | grep "URL" | sed 's/| URL | //' | anew -q vulns/lfi.txt
            echo "[+] Results are saved in vulns/lfi.txt"
        else
            echo "[!] Skipping LFI: Too many URLs to test, try with --deep flag"
        fi
    else
        if [ "$LFI" = false ]; then
            echo -e "\n${yellow} lfi_checks skipped in this mode or defined in reconftw.cfg ${reset}"
        elif [ ! -s "gf/lfi.txt" ]; then
            echo -e "\n${yellow} lfi_checks No URLs potentially vulnerables to LFI ${reset}\n"
        else
            echo -e "${yellow} lfi_checks is already processed, to force executing lfi_checks delete\n    $called_fn_dir/.lfi_checks ${reset}\n"
        fi
    fi
}

# Main script execution
deep_flag=false

while (( "$#" )); do
    case "$1" in
        -d|--deep)
            deep_flag=true
            shift
            ;;
        -h|--help)
            display_help
            exit 0
            ;;
        *) 
            echo "Unknown parameter passed: $1"
            display_help
            exit 1
            ;;
    esac
done

validate_requirements
lfi_checks $deep_flag
