#!/bin/bash

# Load environment variables from reconftw.cfg
# Load environment variables
if [ -f "reconftw.cfg" ]; then
    source reconftw.cfg
else
    echo "Error: reconftw.cfg not found!"
    exit 1
fi

# Colors
yellow="\033[1;33m"
reset="\033[0m"

# Help menu function
function display_help() {
    echo "$(basename "$0") [OPTIONS]"
    echo
    echo "Perform Command Injection checks on provided inputs."
    echo "Options:"
    echo "  -h, --help    Display this help and exit"
    echo
}

# Validate requirements function
function validate_requirements() {
    if ! [ -x "$(command -v python3)" ]; then
        echo "Error: python3 not found." >&2
        exit 1
    fi
    if ! [ -f "gf/rce.txt" ]; then
        echo "Error: rce.txt not found." >&2
        exit 1
    fi
}

# Command Injection test function
function command_injection_test() {
    if { [ ! -f "$called_fn_dir/.command_injection" ] || [ "$DIFF" = true ]; } && [ "$COMM_INJ" = true ] && [ -s "gf/rce.txt" ]; then
        echo "[*] Starting Command Injection checks"
        [ -s "gf/rce.txt" ] && cat gf/rce.txt | qsreplace FUZZ | sed '/FUZZ/!d'  | anew -q .tmp/tmp_rce.txt
        if [ "$DEEP" = true ] || [[ $(cat .tmp/tmp_rce.txt | wc -l) -le $DEEP_LIMIT ]]; then
            [ -s ".tmp/tmp_rce.txt" ] && python3 $tools/commix/commix.py --batch -m .tmp/tmp_rce.txt --output-dir vulns/command_injection.txt 2>>"$LOGFILE" >/dev/null
            echo "[+] Results are saved in vulns/command_injection folder"
        else
            echo "[!] Skipping Command injection: Too many URLs to test, try with --deep flag"
        fi
    else
        if [ "$COMM_INJ" = false ]; then
            echo -e "\n${yellow} command_injection_test skipped in this mode or defined in reconftw.cfg ${reset}"
        elif [ ! -s "gf/rce.txt" ]; then
            echo -e "\n${yellow} command_injection_test No URLs potentially vulnerables to Command Injection ${reset}\n"
        else
            echo -e "${yellow} command_injection_test is already processed, to force executing command_injection_test delete\n    $called_fn_dir/.command_injection ${reset}\n"
        fi
    fi
}

# Main script execution
while (( "$#" )); do
    case "$1" in
        -h|--help)
            display_help
            exit 0
            ;;
        *) 
            echo "Unknown parameter passed: $1"
            display_help
            exit 1
            ;;
    esac
done

validate_requirements
command_injection_test
