#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# Help menu
function display_help() {
	echo "$(basename "$0") [OPTIONS]"
	echo
	echo "Perform XSS analysis on provided inputs."
	echo "Options:"
	echo "  -h, --help    Display this help and exit"
	echo
}

# Validate the required tools and files
function validate_requirements() {
	if ! [[ -x "$(command -v dalfox)" ]]; then
		echo "Error: dalfox is not installed." >&2
		exit 1
	fi
	if [[ ! -f "gf/xss.txt" ]]; then
		echo "Error: gf/xss.txt does not exist." >&2
		exit 1
	fi
}

# Main xss function
function xss_analysis() {
	echo "[*] Starting XSS Analysis"
	# Check if gf/xss.txt exists and process it
	[[ -s "gf/xss.txt" ]] && cat gf/xss.txt | qsreplace FUZZ | sed '/FUZZ/!d' | Gxss -c 100 -p Xss | qsreplace FUZZ | sed '/FUZZ/!d' | anew -q .tmp/xss_reflected.txt
	# Check if AXIOM is true or not and perform the corresponding operations
	if [[ ${AXIOM} != true ]]; then
		if [[ $DEEP == true ]]; then
			if [[ -n $XSS_SERVER ]]; then
				[[ -s ".tmp/xss_reflected.txt" ]] && cat .tmp/xss_reflected.txt | dalfox pipe --silence --no-color --no-spinner --only-poc r --ignore-return 302,404,403 --skip-bav -b ${XSS_SERVER} -w $DALFOX_THREADS 2>>"${LOGFILE}" | anew -q vulns/xss.txt
			else
				printf "${yellow}\n No XSS_SERVER defined, blind xss skipped\n\n"
				[[ -s ".tmp/xss_reflected.txt" ]] && cat .tmp/xss_reflected.txt | dalfox pipe --silence --no-color --no-spinner --only-poc r --ignore-return 302,404,403 --skip-bav -w $DALFOX_THREADS 2>>"${LOGFILE}" | anew -q vulns/xss.txt
			fi
		else
			if [[ $(cat .tmp/xss_reflected.txt | wc -l) -le $DEEP_LIMIT ]]; then
				if [[ -n $XSS_SERVER ]]; then
					cat .tmp/xss_reflected.txt | dalfox pipe --silence --no-color --no-spinner --skip-bav --skip-mining-dom --skip-mining-dict --only-poc r --ignore-return 302,404,403 -b ${XSS_SERVER} -w $DALFOX_THREADS 2>>"${LOGFILE}" | anew -q vulns/xss.txt
				else
					printf "${yellow}\n No XSS_SERVER defined, blind xss skipped\n\n"
					cat .tmp/xss_reflected.txt | dalfox pipe --silence --no-color --no-spinner --skip-bav --skip-mining-dom --skip-mining-dict --only-poc r --ignore-return 302,404,403 -w $DALFOX_THREADS 2>>"${LOGFILE}" | anew -q vulns/xss.txt
				fi
			else
				printf "${bred} Skipping XSS: Too many URLs to test, try with --deep flag${reset}\n"
			fi
		fi
	else
		if [[ $DEEP == true ]]; then
			if [[ -n $XSS_SERVER ]]; then
				[[ -s ".tmp/xss_reflected.txt" ]] && axiom-scan .tmp/xss_reflected.txt -m dalfox --skip-bav -b ${XSS_SERVER} -w $DALFOX_THREADS -o vulns/xss.txt "${AXIOM_EXTRA_ARGS}" 2>>"${LOGFILE}" >/dev/null
			else
				printf "${yellow}\n No XSS_SERVER defined, blind xss skipped\n\n"
				[[ -s ".tmp/xss_reflected.txt" ]] && axiom-scan .tmp/xss_reflected.txt -m dalfox --skip-bav -w $DALFOX_THREADS -o vulns/xss.txt "${AXIOM_EXTRA_ARGS}" 2>>"${LOGFILE}" >/dev/null
			fi
		else
			if [[ $(cat .tmp/xss_reflected.txt | wc -l) -le $DEEP_LIMIT ]]; then
				if [[ -n $XSS_SERVER ]]; then
					axiom-scan .tmp/xss_reflected.txt -m dalfox --skip-bav --skip-grepping --skip-mining-all --skip-mining-dict -b ${XSS_SERVER} -w $DALFOX_THREADS -o vulns/xss.txt "${AXIOM_EXTRA_ARGS}" 2>>"${LOGFILE}" >/dev/null
				else
					printf "${yellow}\n No XSS_SERVER defined, blind xss skipped\n\n"
					axiom-scan .tmp/xss_reflected.txt -m dalfox --skip-bav --skip-grepping --skip-mining-all --skip-mining-dict -w $DALFOX_THREADS -o vulns/xss.txt "${AXIOM_EXTRA_ARGS}" 2>>"${LOGFILE}" >/dev/null
				fi
			else
				printf "${bred} Skipping XSS: Too many URLs to test, try with --deep flag${reset}\n"
			fi
		fi
	fi
	echo "[+] Results are saved in vulns/xss.txt"
}

# Main script execution
if [[ $# -eq 0 ]]; then
	display_help
	exit 0
fi

while (("$#")); do
	case "$1" in
	-h | --help)
		display_help
		exit 0
		;;
	*)
		echo "Unknown parameter passed: $1"
		display_help
		exit 1
		;;
	esac
	shift
done

validate_requirements
xss_analysis
