#!/bin/bash
# Looks good, needs testing

# Load environment variables
if [[ -f "reconftw.cfg" ]]; then
	source reconftw.cfg
else
	echo "Error: reconftw.cfg not found!"
	exit 1
fi

help_menu() {
	echo "$(basename "$0") [OPTIONS] DOMAIN"
	echo ""
	echo "Favicon Ip Lookup Tool"
	echo ""
	echo "Options:"
	echo "  -h, --help            Show this help menu"
	echo "  -d, --domain DOMAIN   Specify the domain to process"
}

# Start function
start_func() {
	echo "Starting $1..."
}

# End function
end_func() {
	echo "$1"
	echo "End of $2..."
}

# Default values
DOMAIN=""

# Parse arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-h | --help)
		help_menu
		exit 0
		;;
	-d | --domain)
		DOMAIN="$2"
		shift
		;;
	*)
		# Set the domain if it's not specified with -d
		if [[ -z ${DOMAIN} ]]; then
			DOMAIN="$1"
		fi
		;;
	esac
	shift
done

# Input validation
if [[ -z ${DOMAIN} ]]; then
	help_menu
	exit 1
fi

# Validate domain format
if [[ ! ${DOMAIN} =~ ^[a-zA-Z0-9.-]+$ ]]; then
	echo "Invalid domain format."
	exit 1
fi

pushd "${tools}/fav-up" &>/dev/null || {
	echo "Failed to cd to ${tools}/fav-up in favicon"
	exit 1
}
python3 favUp.py -w "${DOMAIN}" -sc -o favicontest.json
if [[ -s "favicontest.json" ]]; then
	jq -r 'try .found_ips' favicontest.json >temp.txt
	grep -v "not-found" temp.txt >favicontest.txt
	rm temp.txt
	sed -i "s/|/\n/g" favicontest.txt
fi
popd &>/dev/null || {
	echo "Failed to cd back from favicon"
	exit 1
}
[[ -s "${tools}/fav-up/favicontest.txt" ]] && cp "${tools}"/fav-up/favicontest.txt .
cat favicontest.txt
