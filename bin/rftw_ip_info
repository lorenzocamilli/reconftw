#!/bin/bash

# Default config path
CONFIG_PATH="${RECONFTW_CFG}"

# Check if the config file exists
if [[ -f "${CONFIG_PATH}" ]]; then
    source "${CONFIG_PATH}"
else
    echo "Error: reconftw.cfg not found at ${CONFIG_PATH}!"
    exit 1
fi

# If WHOISXML_API is not present or empty, exit the program
if [[ -z $WHOISXML_API ]]; then
	echo "No WHOISXML_API var defined, exiting..."
	exit 1
fi

# Function to display help menu
help_menu() {
	cat <<-EOF
		$(basename "$0") -i <input_file> -o <output_file>

		Search for IP information.

		Options:
		  -i, --input     Target IP address
		  -o, --output    Output file to save results
		  -h, --help      Display this help menu
	EOF
	exit 0
}

# Function to start the process
start_func() {
	echo "[*] $1"
}

# Function to end the process
end_func() {
	echo "[+] $1"
}

# Main function to gather IP info
ip_info_func() {
	local ip="$1"
	if [[ -n ${WHOISXML_API} ]]; then
		# IP Relations
		curl "https://reverse-ip.whoisxmlapi.com/api/v1?apiKey=${WHOISXML_API}&ip=${ip}" 2>/dev/null | jq -r '.result[].name'
		# IP Whois
		curl "https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey=${WHOISXML_API}&domainName=${ip}&outputFormat=json&da=2&registryRawText=1&registrarRawText=1&ignoreRawTexts=1" 2>/dev/null | jq
		# IP Location
		curl "https://ip-geolocation.whoisxmlapi.com/api/v1?apiKey=${WHOISXML_API}&ipAddress=${ip}" 2>/dev/null | jq -r '.ip,.location'
	else
		echo "${yellow} No WHOISXML_API var defined, skipping function ${reset}"
	fi
}

# Default values
INPUT_FILE=""
OUTPUT_FILE=""

# Parse arguments
while [[ $# -gt 0 ]]; do
	case $1 in
	-i | --input)
		INPUT_FILE="$2"
		shift
		;;
	-o | --output)
		OUTPUT_FILE="$2"
		shift
		;;
	-h | --help) help_menu ;;
	*)
		echo "Unknown parameter passed: $1"
		exit 1
		;;
	esac
	shift
done

# Input validation
if [[ -z ${INPUT_FILE} || -z ${OUTPUT_FILE} ]]; then
	help_menu
fi

# Process IPs
while IFS= read -r IP; do
	ip_info_func "${IP}"
done <"${INPUT_FILE}"

echo "Completed. Check ${OUTPUT_FILE} for the results."
